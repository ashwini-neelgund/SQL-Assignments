USE mock_sba;

-- Create a query to return all orders made by users with the first name of “Marion”
SELECT o.*
FROM ORDERS o
LEFT JOIN USERS u ON o.USER_ID = u.USER_ID
WHERE u.FIRST_NAME = "Marion";

-- Create a query to select all users that have not made an order
SELECT u.*
FROM USERS u
LEFT JOIN ORDERS o ON u.USER_ID = o.USER_ID
WHERE o.ORDER_ID IS NULL;

-- Create a Query to select the names and prices of all items that have been part of 2 or more separate orders.
SELECT itm.NAME, itm.PRICE
FROM ITEMS itm LEFT JOIN ORDER_ITEMS odrItm ON itm.ITEM_ID = odrItm.ITEM_ID
GROUP BY itm.ITEM_ID
HAVING COUNT(odrItm.ORDER_ID)>=2;

-- Create a query to return the Order Id, Item name, Item Price, and Quantity from orders made at stores in the city “New York”. 
-- Order by Order Id in ascending order.
SELECT oi.ORDER_ID, i.NAME, i.PRICE, oi.QUANTITY, s.CITY
FROM ORDER_ITEMS oi LEFT JOIN ITEMS i ON oi.ITEM_ID = i.ITEM_ID
		LEFT JOIN ORDERS o ON oi.ORDER_ID = o.ORDER_ID
		LEFT JOIN STORES s ON o.STORE_ID = s.STORE_ID
WHERE s.CITY = "New York"
ORDER BY oi.ORDER_ID;

-- Your boss would like you to create a query that calculates the total revenue generated by each item. 
-- Revenue for an item can be found as (Item Price * Total Quantity Ordered). 
-- Please return the first column as ‘ITEM_NAME’ and the second column as ‘REVENUE’.
SELECT i.NAME AS ITEM_NAME, (i.PRICE * SUM(oi.QUANTITY)) AS REVENUE
FROM ITEMS i JOIN ORDER_ITEMS oi ON i.ITEM_ID = oi.ITEM_ID
GROUP BY oi.ITEM_ID;

-- Create a query with the following output:
-- a.Column 1 -Store Name
-- 		i.The name of each store
-- b.Column 2 -Order Quantity
-- 		i.The number of times an order has been made in this store
-- c.Column 3 -Sales Figure
-- 		i.If the store has been involved in more than 3 orders, mark as ‘High’
-- 		ii.If the store has been involved in less than 3 orders but more than 1 order, mark as ‘Medium’
-- 		
-- 		iii.If the store has been involved with 1 or less orders, mark as ‘Low’
-- d.Should be ordered by the Order Quantity in Descending Order
SELECT s.NAME AS "Store Name", COUNT(o.ORDER_ID) AS "Order Quantity", 
	case 
		when COUNT(o.ORDER_ID) <= 1 then "Low"
		when COUNT(o.ORDER_ID) <= 3 then "Medium"
		ELSE "High"
		END AS "Sales Figure"	
FROM STORES s LEFT JOIN ORDERS o ON s.STORE_ID = o.STORE_ID
GROUP BY o.STORE_ID
ORDER BY `Order Quantity` DESC;
